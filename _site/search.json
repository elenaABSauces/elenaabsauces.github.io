[
  
    {
      "title"       : "1- BIENVENIDOS",
      "category"    : "",
      "tags"        : "jekyll, web, aplicación, introducción, estáticas",
      "url"         : "./Presentacion.html",
      "date"        : "2021-09-30 00:00:00 +0200",
      "description" : "Presentación",
      "content"     : "Introducción¡Hola! Soy Elena de Antón, alumna del ciclo formativo “Desarrollo de plataformas web”; y como proyecto final he decidido investigar un poco como funciona el generador de webs estáticas de Jekyll.A lo largo de estos posts os adentrareis en mi proyecto y espero que acabeis teniendo tanta destreza y agilidad como la que he adquirido yo desarrollandolo.pero… ¿Cuándo es conveniente utilizar un generador de webs estáticas?Bueno, lo primero que debes hacer es tener claro de si quieres crear una web dinámica o estática. Algunas preguntas que puedes hacerte son: ¿Necesito una base de datos? ¿Necesito que el cliente altere contenido?Si tu respuesta es negativa, ¡¡ ahí lo tienes !! Quieres una web estática y este proyecto esta hecho para ti.Gracias por tu interes y a disfrutar !! :)"
    } ,
  
    {
      "title"       : "2- GitHub Pages",
      "category"    : "",
      "tags"        : "jekyll, GitHub Pages",
      "url"         : "./GP.html",
      "date"        : "2021-07-01 00:00:00 +0200",
      "description" : "Usando GitHub Pages",
      "content"     : "¿Qué es y cómo funciona GitHub Pages?GitHub Pages es una herramienta que ofrece un servicio estático de hosting gratuito para webs que utilizan el protocolo HTTPS. Estas webs se alojan en un repositorio específico de la plataforma GitHub.Es un servicio muy sencillo de utilizar, básicamente tener un repositorio en GitHub cuyo nombre sea tu nombre de usuario seguido de github.io. Esa dirección será también la URL para acceder a tu sitio web.Por ejemplo, mi nombre de usuario en GitHub es ele-naABSauces, por lo que el nombre del repositorio que quiero tener alojado en GitHub Pages es elenaABSauces.github.io (Las mayúsculas no interfieren). En el caso de tener un dominio propio, GitHub nos ofrece la posibilidad de configurar ese dominio como el principal para acceder a la web.Para que se muestre correctamente nuestra web, el código que este subido en este repositorio deberá estar estructurado del mismo modo que lo estaría cualquier sitio web, teniendo como primer punto de entrada el documento HTML index.html.Por lo demás, funcionaríamos igual que con cualquier otro proyecto en un repositorio con control de versiones usando GitHub.Puedes investigar más sobre GitHub Pages en su web: https://pages.github.com/"
    } ,
  
    {
      "title"       : "3- ¿Qué es Jekyll?",
      "category"    : "",
      "tags"        : "generador, webs estaticas, jekyll, ventajas",
      "url"         : "./Jekyll.html",
      "date"        : "2021-06-05 21:32:20 +0200",
      "description" : "Qué es Jekyll y como funciona",
      "content"     : "¿Qué es Jekyll?Jekyll es un generador de webs estáticas, es decir, nos permite crear una web estática de una forma más rápida y eficiente ya que podemos reutilizar trozos de código, definir plantillas,etc.Como en cualquier otro sitio web estático, no tienes la posibilidad de usar una base de datos o funcionalidad dinámica, pero a cambio ofrece mayor rapidez a la hora de cargar páginas web y nos aportan más tranquilidad al ser más seguras. Esta seguridad es debida a que no expone a que el usuario final pueda editar información inherente a la página web.Jekyll esta escrito en Ruby; Ruby es un lenguaje de programación interpretado, reflexivo y orientado a objetos. No es necesario conocer este lenguaje para poder utilizar esta herramienta para generar páginas web, aunque a la hora de desarrollar temas nuevos y potentes usando Jekyll, conviene conocer Ruby.Dentro de Ruby, Jekyll es una gema, eso significa que es una dependencia, y para utilizarla de forma repetitiva en tu servidor, utiliza un fichero Gemfile que procesa Bundler, el gestor de dependencias de Ruby.Jekyll no ofrece un editor (Lo que editas, es el resultado final) WYSIWYG, what you see is what you get, a diferencia de Wordpress o Drupal, requiere trabajar directamente en el código, en el lenguaje de marcas de tu elección (markdown, html…) .A la hora de publicar una web con Jekyll, existen varias opciones, las principales serían: Alojarlo en local: Para alojarlo en tu equipo, necesitas tener instalados Ruby, RubyGems, GCC y Make. Una vez que están instalados, necesitas las gemas de Jekyll y Bundler para poder mostrar tu web desde un servidor local. Alojarlo en algún servidor de hosting: GitHub Pages, Netlify, Digital Ocean… Los servidores de hosting modernos hacen la gestión de dependencias automáticamente de tal forma que poner tu página web en marcha usando Jekyll y uno de los temas que ofrece, es casi inmediato. Originalmente, Jekyll fue creado para bloguear y permitir a equipos de documentación, marketing y contenidos trabajar usando markdown o un lenguaje de marcas al que se le pudieran aplicar plantillas, layouts y estilos rápidamente. Es por ese motivo que Jekyll sea una herramienta tan cómoda y rápida, pero a la vez tan visual.¿Cómo funciona un tema de Jekyll?Los temas de Jekyll te permiten agrupar el código dentro de una gema de Ruby, de tal forma que los estilos CSS y plantillas estén contenidos en esa gema. De este modo, el mismo diseño y estilos se pueden aplicar a una web concreta o a varias web, separando la información base de la página, del código y del diseño.Un ejemplo sencillo de página web usando Jekyll y html sería el siguiente:En la raiz del repositorio se encuentra todo lo necesario para que nuestra página web funcione. En el siguiente ejemplo hay una carpeta posts, que contiene el primer post del blog, un punto de entrada y página principal index.html, una página 404 (not found) y una página sobre el autor ´about.md´, un fichero YAML, config.yml que define la información básica del sitio: titulo, url principal…; un gemfile que contiene las dependencias.Hay tres carpetas para definir los estilos y los layouts: includes, layouts y css.La mayor ventaja de los temas de Jekyll, es que todos los archivos pueden sobrescribirse para editar estilos, añadir o quitar contenido…, es decir, modificarlos a tu gusto.Cualquiera puede crear y subir un tema de Jekyll, pero principalmente estarían recogidos en las siguientes webs: La página oficial de Jekyll para guardar temas: http://jekyllthemes.org/ Dentro de GitHub: https://github.com/jekyll/jekyll/wiki/Sites"
    } ,
  
    {
      "title"       : "4-  Ventajas de usar Jekyll",
      "category"    : "",
      "tags"        : "generador, webs estaticas, jekyll, ventajas",
      "url"         : "./ventajas.html",
      "date"        : "2021-05-05 21:32:20 +0200",
      "description" : "Ventajas y Licencia",
      "content"     : "¿Qué ventajas ofrece?Jekyll tiene varias partes en su funcionalidad, que lo hacen muy interesante y potente para educación y equipos de contenido:1. LiquidLiquid es la funcionalidad de Jekyll que permite usar variables y \"trocitos\" de código reutilizables para los lenguajes de marcas que soporta. Por ejemplo, usando HTML, si defines un fichero nav.html, puedes reutilizarlo en cualquie-ra de tus páginas llamando al siguiente código: &lt;center&gt;&lt;img src=\"./assets/img/posts/20211005/include.png\" width=\"240px\"&gt;&lt;/center&gt;2. Front MatterEs un trozito de código / snippet escrito en YAML que se puede escribir al principio de todas las páginas para dar información adicional de la página a los bots, lectores de accesibilidad, etc. (redirigir, links, SEO …) Por ejemplo:3. LayoutsLos Los layouts te permiten definir los estilos de la página web y se aplicará a tu contenido en HTML o Markdown. Para usar layouts, se necesita un directorio _layouts en la raiz del repositorio. Por ejemplo, para crear un layout por defecto, podemos usar un fichero default.hml dentro de la carpeta _layouts, con el siguiente contenido:&lt;center&gt;&lt;img src=\"./assets/img/posts/20211005/arbol.png\" width=\"240px\"&gt;&lt;/center&gt; Este fichero default.html es casi idéntico a nuestro index.html, pero no contiene “Front Mater” y define dos variables que usarán el page.title y contenido de nuestros ficheros. Content, es una variable especial que devuelve el contenido renderizado de la página que solicite el layout.Para usar un layout ya definido, usamos la sección de FrontMatter (2):4. IncludesEn el caso de que el contenido de tu web, tenga información que haya que repetir en varias páginas distintas, usaremos la funcionalidad de includes. Es común usar includes para definir el footer de la página web de forma consistente en todas las páginas.También es común usar includes para navegación y enlazar unas páginas con otras.Por ejemplo este será el layout de nuestra página de departamento:5. Data filesJekyll permite cargar datos de ficheros YAML, JSON y CSV. Estos ficheros tienen que crearse dentro de un directorio llamado _data.Por ejemplo, los horarios de atención de secretaría pueden estar visibles en varias páginas a la vez. Usando data files, solo actualizamos la información base definida en un fichero YAML y nuestras páginas referenciarían ese fichero para generar la web.Podemos aplicar distintos estilos de visualización de la misma información dependiendo de la página que los use.Por ejemplo definimos un archivo horarios_secretaria.yml en el directorio _data:Horarios:- Lectivo: “de 8 a 10 horas” - No_lectivo: “de 8 a 14 horas”6. Otras funcionalidadesJekyll ofrece otras funcionalidades que nos facilitan nuestro trabajo, como la posibilidad de organizar en carpetas los archivos estáticos. Si quieres ampliar más la información vista anteriormente visita la página:https://jekyllrb.com/docs/step-by-step/01-setup/¿Qué licencia y coste tiene Jekyll?Tanto Jekyll como los temas disponibles son código abierto y tienen como mínimo, licencia de código abierto MIT.Aunque hay servidores de pago, se encuentra alojamiento gratuito en GitHub Pages y Netlify, aunque Netlify require incluir un código de “desarrollado con Netlify” en tu web. Ambas opciones permiten añadir un dominio propio de forma gratuita."
    } ,
  
    {
      "title"       : "5- ¿Por qué elegir Jekyll?",
      "category"    : "",
      "tags"        : "licencia, precio, comparativa",
      "url"         : "./comparativa.html",
      "date"        : "2021-04-10 20:32:20 +0200",
      "description" : "Comparativa con otras plataformas.",
      "content"     : "¿Por qué elegir Jekyll y no otro generador de webs estáticas?Existen otros dos grandes frameworks con los que Jekyll compite directamente: Hugo y Gatsby.Las mayores diferencias se encuentran en el lenguaje de programación en los que están escritos: Hugo en Go y Gastby en JavaScript.Además el proceso de publicar la página web usando GitHub Pages es inmediato usando Jekyll pero usando Hugo o Gatsby require usar funcionalidad intermedia de GitHub como GitHub Actions.Por otro lado, se puede comparar con gestores de contenidos como Wordpess, Drupal o Joomla. La mayor diferencia es que estos gestores de contenidos requieren una base de datos y un hosting más caro a cambio de editores WYSIWYG, que permiten editar la web de una forma visual.Ejemplos de webs donde se ha utilizado Jekyll: :En el siguiente enlace encontrareís un listado de webs que se han creado utilizando plantillas de Jekyll: https://jekyllrb.com/showcase/"
    } ,
  
    {
      "title"       : "6- Análisis",
      "category"    : "",
      "tags"        : "analisis, diseño, entorno de desarrollo, lenguajes de programación, tutorial, requisitos",
      "url"         : "./Analisis.html",
      "date"        : "2021-03-20 20:32:20 +0100",
      "description" : "Análisis y diseño",
      "content"     : "Análisis y diseñoPara crear este tutorial, haremos una página web con una única ruta principal, que tenga un apartado para cada parte del proceso, accesible desde la navegación principal de la web.Titulo del Sitio: DAWSubtitulo: Proyecto finalSecciones: Presentación Usando GitHub Pages Qué es Jekyll y cómo funciona Qué ventajas ofrece y que tipo de licencia tiene Por qué elegir Jekyll y no otro generador de webs estáticas Análisis y diseño Caso práctico WebgrafíaPre-requisitos antes de comenzar: Tener instalado la versión 2.5.0 de Ruby o superior. RubyGems GCC and Make Diseño de InterfaceA la hora de elegir el diseño de Interface, buscaremos una plantilla de Jekyll que mejor se ajuste a nuestras necesidades. En este caso necesitamos un tema sencillo de navegar, que ofrece la posibilidad de crear varios posts para organizar la información que queremos compartir. También, un tema que se adapte a las plataformas móviles y que use un esquema de colores atractivo, uniforme y con la posibilidad de elegir modo noche.Árbol de navegación"
    } ,
  
    {
      "title"       : "7- Caso Práctico",
      "category"    : "",
      "tags"        : "jekyll, web, aplicación",
      "url"         : "./caso-practico.html",
      "date"        : "2021-03-03 00:00:00 +0100",
      "description" : "Caso practico",
      "content"     : "EXPLICACIÓN DEL TRABAJO REALIZADOA lo largo de este proyecto, se ha investigado el funcionamiento de Jekyll como generador de webs estáticas, y como alojar una web en GitHub Pages.Primero, he evaluado las diferentes herramientas que podía utilizar para la realización de este proyecto: entornos de desarrollo, gestores de contenidos, generadores de páginas webs estáticas y opciones de alojamiento web.Tras decantarme por la herramienta de Jekyll como generador de webs estáticas, realicé un repaso por la documentación existente en internet y que facilita la propia página web de Jekyll. Una vez entendí el proceso y las ventajas que me ofrecía el uso de Jekyll con GitHub Pages, decidí crear mi propia web utilizando uno de los temas de Jekyll, y alojarla de forma gratuita en GitHub Pages.En dicha web, se puede encontrar la documentación contenida en este proyecto para que cualquier persona pueda seguirlo como guía y publicar su propia página web utilizando Jekyll. REPOSITORIO DE SOFTWAREHe utilizado GitHub como repositorio de software y sistema de control de versiones. El repositorio es de código abierto y se puede encontrar en el siguiente enlace: https://github.com/elenaABSauces/elenaabsauces.github.ioEste mismo repositorio, se utiliza como base para el alojamiento en GitHub Pages.DOCUMENTACIÓN: MANUAL DE USUARIO, MANUAL DE DESPLIEGUEPre-requisitos:Jekyll recomienda utilizar Linux o macOS. A pesar de eso, y aunque Windows no es una plataforma oficial, se puede utilizar Windows con Jekyll realizando los siguientes pasos:1º Instalar RubyInstaller para instalar Ruby: https://rubyinstaller.org/downloads/• Ruby+Devkit 3.0.2-1 (x64) Y seguir con los pasos del “installation wizard”:Después de la instalación, cierro y abro una nueva terminal de comandos para instalar las gemas de Jekyll y Bundler:gem install jekyll bundlerPara comprobar que está instalado correctamente utilizamos el comando jekyll -vTambién se puede ejecutar el comando de instalación de Jekyll directamente sobre la carpeta que hemos clonado del repositorio con la plantilla que vamos a utilizarDentro de la carpeta del proyecto, para generar la página web se pueden utilizar los co-mandos:jekyll serve (para una carga inmediatajekyll serve –watch para que la web se sincronice y vaya mostrando los cambios a me-dida que vas trabajando y guardando el proyecto.El comando jekyll serve mostrara en la terminal el puerto local en el que puedes ver tu página web. Por defecto, Jekyll usa el puerto 4000, pero puedes modificarlo usando –port:Jekyll serve - –port 4001Si se utiliza la versión de Ruby 3.0.0 o superior, requiere añadir manualmente la depen-dencia webrick en el gemfile:gem “webrick”, “~&gt; 1.7”Para utilizar una plantilla de Jekyll, tan solo tenemos que hacer un fork de ella en nuestro repositorio de GitHub. Si la vamos a desplegar en GitHub Pages, cambiaremos el nombre de dicho repositorio a nuestro nombre de usuario.github.ioTambién se puede pulsar directamente a “use this template”, y os aparecerá directamente para añadir esta plantilla a vuestra GitHub Pages:Configuración de GitHub Pages:Fork en nuestro repositorio:A partir de este momento, podemos realizar cambios directamente en el repositorio y utili-zarlo como entorno de desarrollo.En nuestro caso, hemos decidido realizar un desarrollo en local, por lo que clonaremos dicho repositorio y comenzaremos a trabajar en él desde nuestro IDE.Lo más importante es cambiar y personalizar el fichero _config.yml.Segundo, recomiendo cambiar las imágenes de la carpeta de assets/img por las que queramos nosotros, el diseño y los colores en /assets/css/main.css o cualquier otro cambio que queramos realizar para personalizar la plantilla a nuestro gusto.En este caso, se han modificado los ficheros alojados en la carpeta _posts para crear las diferentes entradas de la web.Además de todos estos cambios en el código, también se pueden añadir diferentes wid-gets.Nuestra plantilla, utiliza widgets tanto para la Newsletter como para los comentarios:Como ya estaban por defecto, lo único que hemos tenido que hacer es crear una cuenta en https://mailchimp.com para tener activo el Newslettery en https://disqus.com/ para activar los comentarios y poder moderarlos."
    } ,
  
    {
      "title"       : "8- Webgrafía",
      "category"    : "",
      "tags"        : "bibliografía, referencias, documentación",
      "url"         : "./webgraf%C3%ADa.html",
      "date"        : "2021-02-05 00:00:00 +0100",
      "description" : "webgrafía",
      "content"     : "WebgrafíaPara elaborar este proyecto, se ha consultado la siguiente webgrafía: Experimenta con Jekyll. (2017). Experimentaconjekyll. http://feeds.feedburner.com/Experimentaconjekyll GitHub Pages. (2021). https://pages.github.com/. https://pages.github.com/ Infographic: Gatsby vs Hugo vs Jekyll. (2019, 13 marzo). Reddit. https://www.reddit.com/r/webdev/comments/b0j9rs/infographic_gatsby_vs_hugo_vs_jekyll/ Jekyll – the practical generator for static websites. (2021, 27 octubre). IONOS Digitalguide. https://www.ionos.com/digitalguide/hosting/blogs/jekyll-the-basic-framework-for-web-projects-without-databases/ L. (2020). Add webrick gem to fix jekyll server · luispuerto/luispuerto-net@1f62feb. GitHub. https://github.com/luispuerto/luispuerto-net/commit/1f62febdfd8d43d79d6095b031032e1692098925 Lone Wolf Theme. (2021). Jekyll theme. http://jekyllthemes.org/themes/lone-wolf-theme/ Markdown editing with Visual Studio Code. (2021, 3 noviembre). Visualstudio. https://code.visualstudio.com/docs/languages/markdown Make A High-Quality Logo In Just 5 Minutes For Under $30! (2021). Tailor Brands. https://studio.tailorbrands.com/ Quickstart. (2021, 5 noviembre). Jekyll • Simple, Blog-Aware, Static Sites. https://jekyllrb.com/docs/ Scribbr. (2021, 1 marzo). Formato APA con el Generador APA de. https://www.scribbr.es/detector-de-plagio/generador-apa/ Showcase. (2021). Jekyll • Simple, Blog-Aware, Static Sites. https://jekyllrb.com/showcase/Conclusión final"
    } 
  
]
