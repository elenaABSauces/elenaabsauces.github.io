I"≥<h2 id="explicaci√≥n-del-trabajo-realizado">EXPLICACI√ìN DEL TRABAJO REALIZADO</h2>
<p>A lo largo de este proyecto, se ha investigado el funcionamiento de Jekyll como generador de webs est√°ticas, y como alojar una web en GitHub Pages.
Primero, he evaluado las diferentes herramientas que pod√≠a utilizar para la realizaci√≥n de este proyecto: entornos de desarrollo, gestores de contenidos, generadores de p√°ginas webs est√°ticas y opciones de alojamiento web.
Tras decantarme por la herramienta de Jekyll como generador de webs est√°ticas, realic√© un repaso por la documentaci√≥n existente en internet y que facilita la propia p√°gina web de Jekyll. Una vez entend√≠ el proceso y las ventajas que me ofrec√≠a el uso de Jekyll con GitHub Pages, decid√≠ crear mi propia web utilizando uno de los temas de Jekyll, y alojarla de forma gratuita en GitHub Pages.
En dicha web, se puede encontrar la documentaci√≥n contenida en este proyecto para que cualquier persona pueda seguirlo como gu√≠a y publicar su propia p√°gina web utilizando Jekyll.
ÔÉò	REPOSITORIO DE SOFTWARE
He utilizado GitHub como repositorio de software y sistema de control de versiones. El repositorio es de c√≥digo abierto y se puede encontrar en el siguiente enlace: 
https://github.com/elenaABSauces/elenaabsauces.github.io
Este mismo repositorio, se utiliza como base para el alojamiento en GitHub Pages.</p>

<h2 id="documentaci√≥n-manual-de-usuario-manual-de-despliegue">DOCUMENTACI√ìN: MANUAL DE USUARIO, MANUAL DE DESPLIEGUE</h2>

<p>Pre-requisitos:
Jekyll recomienda utilizar Linux o macOS. A pesar de eso, y aunque Windows no es una plataforma oficial, se puede utilizar Windows con Jekyll realizando los siguientes pasos:
1¬∫ Instalar RubyInstaller para instalar Ruby: https://rubyinstaller.org/downloads/
‚Ä¢	 Ruby+Devkit 3.0.2-1 (x64) 
Y seguir con los pasos del ‚Äúinstallation wizard‚Äù:</p>

<center><img src="./assets/img/posts/20211031/ruby1.png" width="240px" /></center>

<p>Despu√©s de la instalaci√≥n, cierro y abro una nueva terminal de comandos para instalar las gemas de Jekyll y Bundler:
gem install jekyll bundler
Para comprobar que est√° instalado correctamente utilizamos el comando jekyll -v</p>

<center><img src="./assets/img/posts/20211031/ruby2.png" width="240px" /></center>

<p>Tambi√©n se puede ejecutar el comando de instalaci√≥n de Jekyll directamente sobre la carpeta que hemos clonado del repositorio con la plantilla que vamos a utilizar</p>

<center><img src="./assets/img/posts/20211031/ruby3.png" width="240px" /></center>

<p>Dentro de la carpeta del proyecto, para generar la p√°gina web se pueden utilizar los co-mandos:
jekyll serve (para una carga inmediata
jekyll serve ‚Äìwatch para que la web se sincronice y vaya mostrando los cambios a me-dida que vas trabajando y guardando el proyecto.
El comando jekyll serve mostrara en la terminal el puerto local en el que puedes ver tu p√°gina web. Por defecto, Jekyll usa el puerto 4000, pero puedes modificarlo usando ‚Äìport:
Jekyll serve - ‚Äìport 4001</p>

<center><img src="./assets/img/posts/20211031/ruby4.png" width="240px" /></center>

<p>Si se utiliza la versi√≥n de Ruby 3.0.0 o superior, requiere a√±adir manualmente la depen-dencia webrick en el gemfile:
gem ‚Äúwebrick‚Äù, ‚Äú~&gt; 1.7‚Äù</p>

<center><img src="./assets/img/posts/20211031/ruby5.png" width="240px" /></center>

<p>Para utilizar una plantilla de Jekyll, tan solo tenemos que hacer un fork de ella en nuestro repositorio de GitHub. Si la vamos a desplegar en GitHub Pages, cambiaremos el nombre de dicho repositorio a nuestro nombre de usuario.github.io
Tambi√©n se puede pulsar directamente a ‚Äúuse this template‚Äù, y os aparecer√° directamente para a√±adir esta plantilla a vuestra GitHub Pages:</p>

<center><img src="./assets/img/posts/20211031/github1.png" width="240px" /></center>

<p>Configuraci√≥n de GitHub Pages:</p>

<center><img src="./assets/img/posts/20211031/github2.png" width="240px" /></center>

<p>Fork en nuestro repositorio:</p>

<center><img src="./assets/img/posts/20211031/github3.png" width="240px" /></center>

<p>A partir de este momento, podemos realizar cambios directamente en el repositorio y utili-zarlo como entorno de desarrollo.
En nuestro caso, hemos decidido realizar un desarrollo en local, por lo que clonaremos dicho repositorio y comenzaremos a trabajar en √©l desde nuestro IDE.
Lo m√°s importante es cambiar y personalizar el fichero _config.yml.</p>

<center><img src="./assets/img/posts/20211031/vs.png" width="240px" /></center>

<p>Segundo, recomiendo cambiar las im√°genes de la carpeta de assets/img por las que queramos nosotros, el dise√±o y los colores en /assets/css/main.css o cualquier otro cambio que queramos realizar para personalizar la plantilla a nuestro gusto.
En este caso, se han modificado los ficheros alojados en la carpeta _posts para crear las diferentes entradas de la web.</p>

<p>Adem√°s de todos estos cambios en el c√≥digo, tambi√©n se pueden a√±adir diferentes wid-gets.
Nuestra plantilla, utiliza widgets tanto para la Newsletter como para los comentarios:</p>

<center><img src="./assets/img/posts/20211031/comentarios.png" width="240px" /></center>

<p>Como ya estaban por defecto, lo √∫nico que hemos tenido que hacer es crear una cuenta en  https://mailchimp.com para tener activo el Newsletter, y en https://disqus.com/ para activar los comentarios y poder moderarlos.</p>

<center><img src="./assets/img/posts/20211031/disqus.png" width="240px" /><img src="./assets/img/posts/20211031/mailchimp.png" width="240px" /></center>
:ET